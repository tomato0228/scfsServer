<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ltd.tomato.mapper.ChatMapper">
  <resultMap id="BaseResultMap" type="ltd.tomato.model.Chat">
    <id column="chat_id" jdbcType="INTEGER" property="chatId" />
    <result column="chat_date" jdbcType="TIMESTAMP" property="chatDate" />
    <result column="chat_content" jdbcType="VARCHAR" property="chatContent" />
    <result column="send_id" jdbcType="INTEGER" property="sendId" />
    <result column="receive_id" jdbcType="INTEGER" property="receiveId" />
    <result column="chat_mesg" jdbcType="INTEGER" property="chatMesg" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    chat_id, chat_date, chat_content, send_id, receive_id, chat_mesg
  </sql>
  <select id="selectByExample" parameterType="ltd.tomato.model.ChatExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from chat
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from chat
    where chat_id = #{chatId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from chat
    where chat_id = #{chatId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="ltd.tomato.model.ChatExample">
    delete from chat
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="ltd.tomato.model.Chat">
    insert into chat (chat_id, chat_date, chat_content, 
      send_id, receive_id, chat_mesg
      )
    values (#{chatId,jdbcType=INTEGER}, #{chatDate,jdbcType=TIMESTAMP}, #{chatContent,jdbcType=VARCHAR}, 
      #{sendId,jdbcType=INTEGER}, #{receiveId,jdbcType=INTEGER}, #{chatMesg,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="ltd.tomato.model.Chat">
    insert into chat
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="chatId != null">
        chat_id,
      </if>
      <if test="chatDate != null">
        chat_date,
      </if>
      <if test="chatContent != null">
        chat_content,
      </if>
      <if test="sendId != null">
        send_id,
      </if>
      <if test="receiveId != null">
        receive_id,
      </if>
      <if test="chatMesg != null">
        chat_mesg,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="chatId != null">
        #{chatId,jdbcType=INTEGER},
      </if>
      <if test="chatDate != null">
        #{chatDate,jdbcType=TIMESTAMP},
      </if>
      <if test="chatContent != null">
        #{chatContent,jdbcType=VARCHAR},
      </if>
      <if test="sendId != null">
        #{sendId,jdbcType=INTEGER},
      </if>
      <if test="receiveId != null">
        #{receiveId,jdbcType=INTEGER},
      </if>
      <if test="chatMesg != null">
        #{chatMesg,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="ltd.tomato.model.ChatExample" resultType="java.lang.Long">
    select count(*) from chat
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update chat
    <set>
      <if test="record.chatId != null">
        chat_id = #{record.chatId,jdbcType=INTEGER},
      </if>
      <if test="record.chatDate != null">
        chat_date = #{record.chatDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.chatContent != null">
        chat_content = #{record.chatContent,jdbcType=VARCHAR},
      </if>
      <if test="record.sendId != null">
        send_id = #{record.sendId,jdbcType=INTEGER},
      </if>
      <if test="record.receiveId != null">
        receive_id = #{record.receiveId,jdbcType=INTEGER},
      </if>
      <if test="record.chatMesg != null">
        chat_mesg = #{record.chatMesg,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update chat
    set chat_id = #{record.chatId,jdbcType=INTEGER},
      chat_date = #{record.chatDate,jdbcType=TIMESTAMP},
      chat_content = #{record.chatContent,jdbcType=VARCHAR},
      send_id = #{record.sendId,jdbcType=INTEGER},
      receive_id = #{record.receiveId,jdbcType=INTEGER},
      chat_mesg = #{record.chatMesg,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="ltd.tomato.model.Chat">
    update chat
    <set>
      <if test="chatDate != null">
        chat_date = #{chatDate,jdbcType=TIMESTAMP},
      </if>
      <if test="chatContent != null">
        chat_content = #{chatContent,jdbcType=VARCHAR},
      </if>
      <if test="sendId != null">
        send_id = #{sendId,jdbcType=INTEGER},
      </if>
      <if test="receiveId != null">
        receive_id = #{receiveId,jdbcType=INTEGER},
      </if>
      <if test="chatMesg != null">
        chat_mesg = #{chatMesg,jdbcType=INTEGER},
      </if>
    </set>
    where chat_id = #{chatId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="ltd.tomato.model.Chat">
    update chat
    set chat_date = #{chatDate,jdbcType=TIMESTAMP},
      chat_content = #{chatContent,jdbcType=VARCHAR},
      send_id = #{sendId,jdbcType=INTEGER},
      receive_id = #{receiveId,jdbcType=INTEGER},
      chat_mesg = #{chatMesg,jdbcType=INTEGER}
    where chat_id = #{chatId,jdbcType=INTEGER}
  </update>
</mapper>