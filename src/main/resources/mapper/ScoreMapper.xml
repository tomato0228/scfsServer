<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ltd.tomato.mapper.ScoreMapper">
  <resultMap id="BaseResultMap" type="ltd.tomato.model.Score">
    <id column="score_id" jdbcType="INTEGER" property="scoreId" />
    <result column="score_num" jdbcType="REAL" property="scoreNum" />
    <result column="score_comment" jdbcType="VARCHAR" property="scoreComment" />
    <result column="student_id" jdbcType="INTEGER" property="studentId" />
    <result column="course_id" jdbcType="INTEGER" property="courseId" />
    <result column="semester_id" jdbcType="INTEGER" property="semesterId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    score_id, score_num, score_comment, student_id, course_id, semester_id
  </sql>
  <select id="selectByExample" parameterType="ltd.tomato.model.ScoreExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from score
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from score
    where score_id = #{scoreId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from score
    where score_id = #{scoreId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="ltd.tomato.model.ScoreExample">
    delete from score
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="score_id" keyProperty="scoreId" parameterType="ltd.tomato.model.Score" useGeneratedKeys="true">
    insert into score (score_num, score_comment, student_id, 
      course_id, semester_id)
    values (#{scoreNum,jdbcType=REAL}, #{scoreComment,jdbcType=VARCHAR}, #{studentId,jdbcType=INTEGER}, 
      #{courseId,jdbcType=INTEGER}, #{semesterId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="score_id" keyProperty="scoreId" parameterType="ltd.tomato.model.Score" useGeneratedKeys="true">
    insert into score
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="scoreNum != null">
        score_num,
      </if>
      <if test="scoreComment != null">
        score_comment,
      </if>
      <if test="studentId != null">
        student_id,
      </if>
      <if test="courseId != null">
        course_id,
      </if>
      <if test="semesterId != null">
        semester_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="scoreNum != null">
        #{scoreNum,jdbcType=REAL},
      </if>
      <if test="scoreComment != null">
        #{scoreComment,jdbcType=VARCHAR},
      </if>
      <if test="studentId != null">
        #{studentId,jdbcType=INTEGER},
      </if>
      <if test="courseId != null">
        #{courseId,jdbcType=INTEGER},
      </if>
      <if test="semesterId != null">
        #{semesterId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="ltd.tomato.model.ScoreExample" resultType="java.lang.Long">
    select count(*) from score
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update score
    <set>
      <if test="record.scoreId != null">
        score_id = #{record.scoreId,jdbcType=INTEGER},
      </if>
      <if test="record.scoreNum != null">
        score_num = #{record.scoreNum,jdbcType=REAL},
      </if>
      <if test="record.scoreComment != null">
        score_comment = #{record.scoreComment,jdbcType=VARCHAR},
      </if>
      <if test="record.studentId != null">
        student_id = #{record.studentId,jdbcType=INTEGER},
      </if>
      <if test="record.courseId != null">
        course_id = #{record.courseId,jdbcType=INTEGER},
      </if>
      <if test="record.semesterId != null">
        semester_id = #{record.semesterId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update score
    set score_id = #{record.scoreId,jdbcType=INTEGER},
      score_num = #{record.scoreNum,jdbcType=REAL},
      score_comment = #{record.scoreComment,jdbcType=VARCHAR},
      student_id = #{record.studentId,jdbcType=INTEGER},
      course_id = #{record.courseId,jdbcType=INTEGER},
      semester_id = #{record.semesterId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="ltd.tomato.model.Score">
    update score
    <set>
      <if test="scoreNum != null">
        score_num = #{scoreNum,jdbcType=REAL},
      </if>
      <if test="scoreComment != null">
        score_comment = #{scoreComment,jdbcType=VARCHAR},
      </if>
      <if test="studentId != null">
        student_id = #{studentId,jdbcType=INTEGER},
      </if>
      <if test="courseId != null">
        course_id = #{courseId,jdbcType=INTEGER},
      </if>
      <if test="semesterId != null">
        semester_id = #{semesterId,jdbcType=INTEGER},
      </if>
    </set>
    where score_id = #{scoreId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="ltd.tomato.model.Score">
    update score
    set score_num = #{scoreNum,jdbcType=REAL},
      score_comment = #{scoreComment,jdbcType=VARCHAR},
      student_id = #{studentId,jdbcType=INTEGER},
      course_id = #{courseId,jdbcType=INTEGER},
      semester_id = #{semesterId,jdbcType=INTEGER}
    where score_id = #{scoreId,jdbcType=INTEGER}
  </update>
</mapper>